
// Generated by dojo-bindgen on Tue, 3 Sep 2024 18:59:20 +0000. Do not modify this file manually.
// Import the necessary types from the recs SDK
// generate again with `sozo build --typescript` 
import { defineComponent, Type as RecsType, type World } from "@dojoengine/recs";

export type ContractComponents = Awaited<ReturnType<typeof defineContractComponents>>;



// Type definition for `dojo::model::layout::Layout` enum
export type Layout = { type: 'Fixed'; value: RecsType.NumberArray; } | { type: 'Struct'; value: RecsType.StringArray; } | { type: 'Tuple'; value: RecsType.StringArray; } | { type: 'Array'; value: RecsType.StringArray; } | { type: 'ByteArray'; } | { type: 'Enum'; value: RecsType.StringArray; };

export const LayoutDefinition = {
    type: RecsType.String,
    value: RecsType.String
};
        
// Type definition for `core::byte_array::ByteArray` struct
export interface ByteArray {
    data: String[];
    pending_word: BigInt;
    pending_word_len: Number;
    
}
export const ByteArrayDefinition = {
    data: RecsType.StringArray,
    pending_word: RecsType.BigInt,
    pending_word_len: RecsType.Number,
    
};

// Type definition for `camini::effects::models::DamageAmt` struct
export interface DamageAmt {
    creator: BigInt;
    amt: Number;
    
}
export const DamageAmtDefinition = {
    creator: RecsType.BigInt,
    amt: RecsType.Number,
    
};

// Type definition for `dojo::model::layout::FieldLayout` struct
export interface FieldLayout {
    selector: BigInt;
    layout: Layout;
    
}
export const FieldLayoutDefinition = {
    selector: RecsType.BigInt,
    layout: LayoutDefinition,
    
};


// Type definition for `camini::effects::models::Effect` struct
export interface Effect {
    effect_id: Number;
    contract: BigInt;
    
}
export const EffectDefinition = {
    effect_id: RecsType.Number,
    contract: RecsType.BigInt,
    
};


// Type definition for `camini::models::game::Status` enum
export type Status = { type: 'Pending'; } | { type: 'Active'; } | { type: 'Completed'; };

export const StatusDefinition = {
    type: RecsType.String,
    value: RecsType.String
};
        
// Type definition for `camini::models::game::TurnPhase` enum
export type TurnPhase = { type: 'Standby'; } | { type: 'Moving'; } | { type: 'End'; };

export const TurnPhaseDefinition = {
    type: RecsType.String,
    value: RecsType.String
};
        
// Type definition for `camini::models::game::Game` struct
export interface Game {
    game_id: Number;
    players: BigInt[];
    teams: Number[];
    turn_player: BigInt;
    status: Status;
    phase: TurnPhase;
    
}
export const GameDefinition = {
    game_id: RecsType.Number,
    players: RecsType.BigIntArray,
    teams: RecsType.NumberArray,
    turn_player: RecsType.BigInt,
    status: StatusDefinition,
    phase: TurnPhaseDefinition,
    
};


// Type definition for `camini::models::global::Global` struct
export interface Global {
    global_key: Number;
    pending_games: Number[];
    damage_contract: BigInt;
    
}
export const GlobalDefinition = {
    global_key: RecsType.Number,
    pending_games: RecsType.NumberArray,
    damage_contract: RecsType.BigInt,
    
};


// Type definition for `camini::types::Location` enum
export type Location = { type: 'Owner'; } | { type: 'Team'; value: RecsType.Number; } | { type: 'Game'; value: RecsType.Number; } | { type: 'Graveyard'; };

export const LocationDefinition = {
    type: RecsType.String,
    value: RecsType.String
};
        
// Type definition for `camini::models::piece::Piece` struct
export interface Piece {
    piece_id: Number;
    owner: BigInt;
    piece_type: Number;
    location: Location;
    data: PieceData;
    
}
export const PieceDataDefinition = {
    health: RecsType.Number,
    
};
export const PieceDefinition = {
    piece_id: RecsType.Number,
    owner: RecsType.BigInt,
    piece_type: RecsType.Number,
    location: LocationDefinition,
    data: PieceDataDefinition,
    
};

// Type definition for `camini::models::piece::PieceData` struct
export interface PieceData {
    health: Number;
    
}



// Type definition for `camini::models::piece::PieceType` struct
export interface PieceType {
    piece_type_id: Number;
    creator: BigInt;
    contract: BigInt;
    
}
export const PieceTypeDefinition = {
    piece_type_id: RecsType.Number,
    creator: RecsType.BigInt,
    contract: RecsType.BigInt,
    
};


// Type definition for `camini::models::player::Player` struct
export interface Player {
    address: BigInt;
    games: Number[];
    pieces: Number[];
    
}
export const PlayerDefinition = {
    address: RecsType.BigInt,
    games: RecsType.NumberArray,
    pieces: RecsType.NumberArray,
    
};


// Type definition for `camini::models::pool::Pool` struct
export interface Pool {
    pool_id: Number;
    piece_type_ids: Number[];
    effect_type_ids: Number[];
    
}
export const PoolDefinition = {
    pool_id: RecsType.Number,
    piece_type_ids: RecsType.NumberArray,
    effect_type_ids: RecsType.NumberArray,
    
};


// Type definition for `camini::models::position::Position` struct
export interface Position {
    piece_id: Number;
    game_id: Number;
    position: Vec2;
    
}
export const Vec2Definition = {
    x: RecsType.Number,
    y: RecsType.Number,
    
};

export const PositionDefinition = {
    piece_id: RecsType.Number,
    game_id: RecsType.Number,
    position: Vec2Definition,
    
};

// Type definition for `camini::types::Vec2` struct
export interface Vec2 {
    x: Number;
    y: Number;
    
}



// Type definition for `camini::models::team::Team` struct
export interface Team {
    team_id: Number;
    owner: BigInt;
    pieces: Number[];
    location: Location;
    
}
export const TeamDefinition = {
    team_id: RecsType.Number,
    owner: RecsType.BigInt,
    pieces: RecsType.NumberArray,
    location: LocationDefinition,
    
};


// Type definition for `camini::models::position::Tile` struct
export interface Tile {
    game_id: Number;
    position: Vec2;
    piece: Number;
    
}
export const TileDefinition = {
    game_id: RecsType.Number,
    position: Vec2Definition,
    piece: RecsType.Number,
    
};


export function defineContractComponents(world: World) {
    return {

        // Model definition for `camini::effects::models::DamageAmt` model
        DamageAmt: (() => {
            return defineComponent(
                world,
                {
                    creator: RecsType.BigInt,
                    amt: RecsType.Number,
                },
                {
                    metadata: {
                        namespace: "ok",
                        name: "DamageAmt",
                        types: ["ContractAddress", "u32"],
                        customTypes: [],
                    },
                }
            );
        })(),

        // Model definition for `camini::effects::models::Effect` model
        Effect: (() => {
            return defineComponent(
                world,
                {
                    effect_id: RecsType.Number,
                    contract: RecsType.BigInt,
                },
                {
                    metadata: {
                        namespace: "ok",
                        name: "Effect",
                        types: ["u32", "ContractAddress"],
                        customTypes: [],
                    },
                }
            );
        })(),

        // Model definition for `camini::models::game::Game` model
        Game: (() => {
            return defineComponent(
                world,
                {
                    game_id: RecsType.Number,
                    players: RecsType.BigIntArray,
                    teams: RecsType.NumberArray,
                    turn_player: RecsType.BigInt,
                    status: RecsType.String,
                    phase: RecsType.String,
                },
                {
                    metadata: {
                        namespace: "ok",
                        name: "Game",
                        types: ["u32", "array", "array", "ContractAddress", "Status", "TurnPhase"],
                        customTypes: [],
                    },
                }
            );
        })(),

        // Model definition for `camini::models::global::Global` model
        Global: (() => {
            return defineComponent(
                world,
                {
                    global_key: RecsType.Number,
                    pending_games: RecsType.NumberArray,
                    damage_contract: RecsType.BigInt,
                },
                {
                    metadata: {
                        namespace: "ok",
                        name: "Global",
                        types: ["u8", "array", "ContractAddress"],
                        customTypes: [],
                    },
                }
            );
        })(),

        // Model definition for `camini::models::piece::Piece` model
        Piece: (() => {
            return defineComponent(
                world,
                {
                    piece_id: RecsType.Number,
                    owner: RecsType.BigInt,
                    piece_type: RecsType.Number,
                    location: RecsType.String,
                    data: PieceDataDefinition,
                },
                {
                    metadata: {
                        namespace: "ok",
                        name: "Piece",
                        types: ["u32", "ContractAddress", "u32", "Location"],
                        customTypes: ["PieceData"],
                    },
                }
            );
        })(),

        // Model definition for `camini::models::piece::PieceType` model
        PieceType: (() => {
            return defineComponent(
                world,
                {
                    piece_type_id: RecsType.Number,
                    creator: RecsType.BigInt,
                    contract: RecsType.BigInt,
                },
                {
                    metadata: {
                        namespace: "ok",
                        name: "PieceType",
                        types: ["u32", "ContractAddress", "ContractAddress"],
                        customTypes: [],
                    },
                }
            );
        })(),

        // Model definition for `camini::models::player::Player` model
        Player: (() => {
            return defineComponent(
                world,
                {
                    address: RecsType.BigInt,
                    games: RecsType.NumberArray,
                    pieces: RecsType.NumberArray,
                },
                {
                    metadata: {
                        namespace: "ok",
                        name: "Player",
                        types: ["ContractAddress", "array", "array"],
                        customTypes: [],
                    },
                }
            );
        })(),

        // Model definition for `camini::models::pool::Pool` model
        Pool: (() => {
            return defineComponent(
                world,
                {
                    pool_id: RecsType.Number,
                    piece_type_ids: RecsType.NumberArray,
                    effect_type_ids: RecsType.NumberArray,
                },
                {
                    metadata: {
                        namespace: "ok",
                        name: "Pool",
                        types: ["u32", "array", "array"],
                        customTypes: [],
                    },
                }
            );
        })(),

        // Model definition for `camini::models::position::Position` model
        Position: (() => {
            return defineComponent(
                world,
                {
                    piece_id: RecsType.Number,
                    game_id: RecsType.Number,
                    position: Vec2Definition,
                },
                {
                    metadata: {
                        namespace: "ok",
                        name: "Position",
                        types: ["u32", "u32"],
                        customTypes: ["Vec2"],
                    },
                }
            );
        })(),

        // Model definition for `camini::models::team::Team` model
        Team: (() => {
            return defineComponent(
                world,
                {
                    team_id: RecsType.Number,
                    owner: RecsType.BigInt,
                    pieces: RecsType.NumberArray,
                    location: RecsType.String,
                },
                {
                    metadata: {
                        namespace: "ok",
                        name: "Team",
                        types: ["u32", "ContractAddress", "array", "Location"],
                        customTypes: [],
                    },
                }
            );
        })(),

        // Model definition for `camini::models::position::Tile` model
        Tile: (() => {
            return defineComponent(
                world,
                {
                    game_id: RecsType.Number,
                    position: Vec2Definition,
                    piece: RecsType.Number,
                },
                {
                    metadata: {
                        namespace: "ok",
                        name: "Tile",
                        types: ["u32", "u32"],
                        customTypes: ["Vec2"],
                    },
                }
            );
        })(),
    };
}
